package com.fuensalida.vista;

import com.fuensalida.BaseDatos.GestionAuditorioBD;
import com.fuensalida.BaseDatos.GestionEntradasBD;
import com.fuensalida.BaseDatos.GestionEstadosBD;
import com.fuensalida.MiHasMap2;
import com.fuensalida.PatioButacasPanel;
import com.fuensalida.beans.ButacaSesion;
import com.fuensalida.beans.EstadoBean;
import com.fuensalida.beans.SesionBean;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JToggleButton;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vPalomo
 */
public class VistaPantalla extends javax.swing.JFrame {

    private PatioButacasPanel patioButacas;
    private MiHasMap2 allButacas;
    private ArrayList butacasParpadeo;
    private SesionBean sesionSeleccionada;
    private static final String icono="/com/fuensalida/images/CdCEdifIco.png";
    /**
     * Creates new form VistaPantalla
     */
    public VistaPantalla() {
        initComponents();
        
        initPatioButacas(sesionSeleccionada);
        setIconImage(new ImageIcon(getClass().getResource(icono)).getImage());
        initParpadeo();
    }

    public void vaciaParpadeo(){
        butacasParpadeo=new ArrayList();
    }
    public VistaPantalla(SesionBean sesionSelecionada) {
        this.sesionSeleccionada=sesionSelecionada;
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource(icono)).getImage());
        //jLabel1.setHorizontalTextPosition(JLabel.CENTER);
        
        initPatioButacas(sesionSelecionada);
        initParpadeo();
    }

    public void actualizar(SesionBean sesion){
        //System.out.println("Actualizar 3");
        if(sesion==null){
            sesion=sesionSeleccionada;
        }
        //System.out.println("Coloreando en Actualizar");
        coloreaButacas(sesionSeleccionada);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        obra = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 848, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("                   Escenario");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        obra.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        obra.setForeground(new java.awt.Color(255, 0, 51));
        obra.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(obra))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(obra)
                .addGap(3, 3, 3)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaPantalla().setVisible(true);
            }
        });
    }

    private boolean initPatioButacas(SesionBean sesionSeleccionada) {
        patioButacas=new PatioButacasPanel();
        jPanel1.add(patioButacas);
        allButacas=patioButacas.getAllButacas();
        patioButacas.setSize(870, 434);
        coloreaButacas(sesionSeleccionada);
        pintaObra(sesionSeleccionada);
        return true;
    }
    public boolean reInitPatioButacas(SesionBean sesionSeleccionada) {
        this.sesionSeleccionada=sesionSeleccionada;
        jPanel1.remove(patioButacas);
        patioButacas = new PatioButacasPanel();
        jPanel1.add(patioButacas);
        allButacas=patioButacas.getAllButacas();
        patioButacas.setSize(870, 434);
        coloreaButacas(sesionSeleccionada);
        //System.out.println("Repintando");
        jPanel1.revalidate();
        jPanel1.repaint();
        pintaObra(sesionSeleccionada);
        return true;
    }
    
    private void pintaObra(SesionBean sesionSeleccionada){
        obra.setText(sesionSeleccionada.getDescripcion()+"  -  "+sesionSeleccionada.getFecha()+"  -  "+sesionSeleccionada.getHoraCorta());
    }
    
    private void coloreaButacas(SesionBean sesion) {
        //System.out.println("Colorea butacas: "+sesion.getIdActividad()+" "+sesion.getIdSesion() );

        ArrayList estadoButacas = GestionAuditorioBD.getEstadoButacas(sesion.getIdActividad(),sesion.getIdSesion());
        for (int i = 0; i < estadoButacas.size(); i++) {
            ButacaSesion b = (ButacaSesion) estadoButacas.get(i);
            allButacas.put(b);
            //System.out.println("Butaca " + b.getIdButaca() + " estÃ¡ " + GestionEstadosBD.getEstado(b.getIdEstado()));
            JToggleButton bJT = allButacas.getButacaJT(b.getIdButaca());
            if(b.getIdEstado()==3 || b.getIdEstado()==5 ){
                //System.out.println("Estado b="+b);
                bJT.setToolTipText(GestionEntradasBD.getMotivo(b.getIdButaca(), sesion));
            }else{
                bJT.setToolTipText("");
            }
            ponColorButaca(b, bJT);
        }
        jPanel1.repaint();
        return;
    }
    /**
     * Colorea el jButton con respecto al estado de la butaca que se le pasa
     * @param b Butaca, se necesita para poder saber el estado de la misma
     * @param j Boton que se va a cambiar de color.
     */
    private void ponColorButaca(ButacaSesion b, JToggleButton j) {
        j.setForeground(Color.BLACK);
        EstadoBean estado= GestionEstadosBD.getEstado(b.getIdEstado());
        if(estado.getIdEstado()!=1){
            j.setBackground(new Color(255, 0,0));
        }
//                new Color(
//                        Integer.valueOf(estado.getColor().substring(0, 2), 16),
//                        Integer.valueOf(estado.getColor().substring(2, 4), 16),
//                        Integer.valueOf(estado.getColor().substring(4, 6), 16)));
        return;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel obra;
    // End of variables declaration//GEN-END:variables

    /**
     * AÃ±ade una butaca al array de parpadeo, con lo que el boton se pondrÃ¡ a parpadear
     * @param i 
     */
    public void addToParpadeo(int i){
        if(butacasParpadeo==null){
            butacasParpadeo=new ArrayList();
        }
        butacasParpadeo.add(allButacas.getButacaJT(i));
        //System.out.println("Parpadeando Array Size (+) ="+butacasParpadeo.size());
    }
    /**
     * Borra una sola butaca que estÃ© parpadenado. Hay que pasar el ID de la butaca que se quiere quitar
     * @param i
     * @param estado 
     */
    public void removeToParpadeo(int i, int estado){
        if(butacasParpadeo==null){
            return;
        }
        JToggleButton j=allButacas.getButacaJT(i);
        butacasParpadeo.remove(j);
        if(estado==1){
            j.setBackground(new Color(0, 255,0));
        }else{
            j.setBackground(new Color(255, 0,0));
        }
        //System.out.println("Parpadeando Array Size (-) ="+butacasParpadeo.size());
    }
    /**
     * Inicializa el control de parpadeo de butacas (jToggleButton) de la pantalla para clientes.
     */
    private void initParpadeo() {
        //System.out.println("Parpadenado");
        if(butacasParpadeo==null){
            butacasParpadeo=new ArrayList();
        }
        
        Timer timer = new Timer( 500 , new TimerListener());
        timer.setInitialDelay(0);
        timer.start();
    }

    /**
     * Borra todo el parpadeo de butacas. Borra el array y le pone el estado que se le pase por parÃ¡metro
     * @param estado 
     */
    public void removeAllParpadeo(int estado) {
        for (int i=butacasParpadeo.size()-1;i>=0;i--){
            JToggleButton j=(JToggleButton) butacasParpadeo.get(i);
            butacasParpadeo.remove(j);
            if(estado==1){
                j.setBackground(new Color(0, 255,0));
            }else{
                j.setBackground(new Color(255, 0,0));
            }
        }
        butacasParpadeo=new ArrayList();
    }
    
    private class TimerListener implements ActionListener {
        boolean on=true;
        @Override
        public void actionPerformed(ActionEvent e) {
            //System.out.println("Bliking="+butacasParpadeo.size());
            for(int i=0;butacasParpadeo.size()>i;i++){
                JToggleButton j=(JToggleButton) butacasParpadeo.get(i);
                if(on){
                    j.setBackground(new Color(255, 125,0));
                }else{
                    j.setBackground(new Color(0, 255,0));
                }
            }
            on=!on;
        }
       
    }
}

